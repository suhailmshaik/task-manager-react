{"ast":null,"code":"var _jsxFileName = \"/home/suhail/reactApps/task-manager-react/src/components/Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport addedTasks from \"../util/addedTasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState(addedTasks);\n  const handleAddTAsk = task => {\n    if (task !== \"\") {\n      setTasks([...tasks, {\n        name: task\n      }]);\n    }\n  };\n  const handleRemoveTask = (t, i) => {\n    console.log(`this is ${t} with ${i} index`);\n    setTasks(items => items.filter((_, index) => index !== 0));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"current tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"you have \", tasks.length, \" tasks left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: e => {\n          const removeTaskName = e.target.innerText;\n          handleRemoveTask(removeTaskName, index);\n        },\n        className: \"single-task\",\n        children: task.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: e => {\n          const newTaskName = e.target.previousElementSibling.value;\n          handleAddTAsk(newTaskName);\n          e.target.previousElementSibling.value = \"\";\n        },\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"jnNHNeZtodLi46KIGWBSumg2V7M=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","addedTasks","Tasks","tasks","setTasks","handleAddTAsk","task","name","handleRemoveTask","t","i","console","log","items","filter","_","index","length","map","e","removeTaskName","target","innerText","newTaskName","previousElementSibling","value"],"sources":["/home/suhail/reactApps/task-manager-react/src/components/Tasks.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport addedTasks from \"../util/addedTasks\";\n\nconst Tasks = () => {\n  const [tasks, setTasks] = useState(addedTasks);\n\n  const handleAddTAsk = (task) => {\n    if (task !== \"\") {\n      setTasks([...tasks, { name: task }]);\n    }\n  };\n\n  const handleRemoveTask = (t, i) => {\n    console.log(`this is ${t} with ${i} index`);\n    setTasks((items) => items.filter((_, index) => index !== 0));\n  };\n\n  return (\n    <div className=\"tasks-div\">\n      <h2>current tasks</h2>\n      <p>you have {tasks.length} tasks left</p>\n      <div className=\"tasks-container\">\n        {tasks.map((task, index) => (\n          <p\n            onClick={(e) => {\n              const removeTaskName = e.target.innerText;\n              handleRemoveTask(removeTaskName, index);\n            }}\n            className=\"single-task\"\n            key={index}\n          >\n            {task.name}\n          </p>\n        ))}\n      </div>\n\n      <div className=\"add-task-div\">\n        <input type=\"text\" placeholder=\"add task\" />\n        <p\n          onClick={(e) => {\n            const newTaskName = e.target.previousElementSibling.value;\n            handleAddTAsk(newTaskName);\n            e.target.previousElementSibling.value = \"\";\n          }}\n        >\n          add\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Tasks;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAAC;AAE5C,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAACC,UAAU,CAAC;EAE9C,MAAMI,aAAa,GAAIC,IAAI,IAAK;IAC9B,IAAIA,IAAI,KAAK,EAAE,EAAE;MACfF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAAEI,IAAI,EAAED;MAAK,CAAC,CAAC,CAAC;IACtC;EACF,CAAC;EAED,MAAME,gBAAgB,GAAG,CAACC,CAAC,EAAEC,CAAC,KAAK;IACjCC,OAAO,CAACC,GAAG,CAAE,WAAUH,CAAE,SAAQC,CAAE,QAAO,CAAC;IAC3CN,QAAQ,CAAES,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,KAAK,CAAC,CAAC,CAAC;EAC9D,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB;MAAA,wBAAab,KAAK,CAACc,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eACzC;MAAK,SAAS,EAAC,iBAAiB;MAAA,UAC7Bd,KAAK,CAACe,GAAG,CAAC,CAACZ,IAAI,EAAEU,KAAK,kBACrB;QACE,OAAO,EAAGG,CAAC,IAAK;UACd,MAAMC,cAAc,GAAGD,CAAC,CAACE,MAAM,CAACC,SAAS;UACzCd,gBAAgB,CAACY,cAAc,EAAEJ,KAAK,CAAC;QACzC,CAAE;QACF,SAAS,EAAC,aAAa;QAAA,UAGtBV,IAAI,CAACC;MAAI,GAFLS,KAAK;QAAA;QAAA;QAAA;MAAA,QAIb;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,eAEN;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5C;QACE,OAAO,EAAGG,CAAC,IAAK;UACd,MAAMI,WAAW,GAAGJ,CAAC,CAACE,MAAM,CAACG,sBAAsB,CAACC,KAAK;UACzDpB,aAAa,CAACkB,WAAW,CAAC;UAC1BJ,CAAC,CAACE,MAAM,CAACG,sBAAsB,CAACC,KAAK,GAAG,EAAE;QAC5C,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGA;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA/CIvB,KAAK;AAAA,KAALA,KAAK;AAiDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}