{"ast":null,"code":"var _jsxFileName = \"/home/suhail/reactApps/task-manager-react/src/components/Tasks.jsx\";\nimport React from \"react\";\nimport addedTasks from \"../util/addedTasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  const handleAddTAsk = e => {\n    console.log();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"current tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"you have \", addedTasks.length, \" tasks left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), addedTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-task\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: e => {\n          const newTaskName = e.target.previousElementSibling.value;\n          handleAddTAsk(e);\n        },\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","addedTasks","Tasks","handleAddTAsk","e","console","log","length","map","task","name","newTaskName","target","previousElementSibling","value"],"sources":["/home/suhail/reactApps/task-manager-react/src/components/Tasks.jsx"],"sourcesContent":["import React from \"react\";\nimport addedTasks from \"../util/addedTasks\";\n\nconst Tasks = () => {\n  const handleAddTAsk = (e) => {\n    console.log();\n  };\n  return (\n    <div className=\"tasks-div\">\n      <h2>current tasks</h2>\n      <p>you have {addedTasks.length} tasks left</p>\n      {addedTasks.map((task) => (\n        <div className=\"single-task\">\n          <p>{task.name}</p>\n          {/* <button>done</button> */}\n        </div>\n      ))}\n      <div className=\"add-task-div\">\n        <input type=\"text\" placeholder=\"add task\" />\n        <p\n          onClick={(e) => {\n            const newTaskName = e.target.previousElementSibling.value;\n            handleAddTAsk(e);\n          }}\n        >\n          add\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Tasks;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,oBAAoB;AAAC;AAE5C,MAAMC,KAAK,GAAG,MAAM;EAClB,MAAMC,aAAa,GAAIC,CAAC,IAAK;IAC3BC,OAAO,CAACC,GAAG,EAAE;EACf,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB;MAAA,wBAAaL,UAAU,CAACM,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,EAC7CN,UAAU,CAACO,GAAG,CAAEC,IAAI,iBACnB;MAAK,SAAS,EAAC,aAAa;MAAA,uBAC1B;QAAA,UAAIA,IAAI,CAACC;MAAI;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAGrB,CAAC,eACF;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5C;QACE,OAAO,EAAGN,CAAC,IAAK;UACd,MAAMO,WAAW,GAAGP,CAAC,CAACQ,MAAM,CAACC,sBAAsB,CAACC,KAAK;UACzDX,aAAa,CAACC,CAAC,CAAC;QAClB,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGA;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KA3BIF,KAAK;AA6BX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}